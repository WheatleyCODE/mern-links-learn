{"version":3,"sources":["Context/AuthContext.tsx","components/Layout.tsx","components/Loader.tsx","hooks/useAuth.tsx","hooks/http.hook.tsx","pages/AuthPage.tsx","hooks/message.hook.tsx","pages/CreatePage.tsx","components/LinkCard.tsx","pages/DetailPage.tsx","components/LinksList.tsx","pages/LinksPage.tsx","App.tsx","routes/index.tsx","index.tsx"],"names":["AuthContext","React","createContext","token","userId","isAuthenticated","login","logout","Layout","children","useContext","history","useHistory","style","margin","className","to","id","onClick","e","preventDefault","push","Loader","storageName","useHttp","useState","loading","setLoading","error","setError","request","useCallback","url","a","method","body","headers","JSON","stringify","fetch","response","json","data","ok","Error","message","clearErrors","AuthPage","text","window","M","toast","html","auth","email","password","form","setForm","useEffect","console","log","registerHadler","loginHadler","changeHandler","prev","target","name","value","onChange","placeholder","type","htmlFor","disabled","marginRight","CreatePage","link","setLink","pressHandler","key","from","Authorization","_id","paddingTop","onKeyPress","LinkCard","rel","href","clicks","Date","date","toLocaleDateString","DetailPage","useParams","getLink","linkData","LinksList","links","length","map","LinksPage","setLinks","fetchLinks","fetched","App","setToken","setUserId","ready","setReady","jwtToken","localStorage","setItem","removeItem","locData","getItem","parse","useAuth","routes","component","path","exact","useRoutes","Provider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2587d00f.chunk.js","sourcesContent":["import React from 'react'\n\nexport const AuthContext = React.createContext({\n  token: '',\n  userId: '',\n  isAuthenticated: false,\n  login: (token: string, userId: string) => {},\n  logout: () => {},\n})\n","import React, { useContext } from 'react'\nimport { Link, NavLink, useHistory } from 'react-router-dom'\nimport { AuthContext } from '../Context/AuthContext';\n\nconst Layout: React.FC = ({ children }) => {\n  const { logout, isAuthenticated } = useContext(AuthContext)\n  const history = useHistory()\n  const logoutHandler = (e: React.MouseEvent) => {\n    e.preventDefault()\n    logout()\n    history.push('/')\n  }\n  return (\n    <>\n    <header>\n      <nav>\n        <div style={{margin: '0px 20px'}} className=\"nav-wrapper\">\n          <Link to=\"/\" className=\"brand-logo\">Сокращение ссылок</Link>\n          <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\n            <li><NavLink to=\"/create\">Cоздать</NavLink></li>\n            <li><NavLink to=\"/links\">Ссылки</NavLink></li>\n            { isAuthenticated && <li><Link onClick={logoutHandler} to=\"/\">Выйти</Link></li>}\n            \n          </ul>\n        </div>\n      </nav>\n    </header>\n    <main>\n      {children}\n    </main>\n    </>\n  );\n};\n\nexport default Layout;\n","import React from 'react'\n\nconst Loader = () => {\n  return (\n    <div className=\"spinner-layer spinner-blue-only\">\n      <div className=\"preloader-wrapper big active\">\n        <div className=\"circle-clipper left\">\n          <div className=\"circle\"></div>\n        </div><div className=\"gap-patch\">\n          <div className=\"circle\"></div>\n        </div><div className=\"circle-clipper right\">\n          <div className=\"circle\"></div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Loader\n","import {useState, useCallback, useEffect} from 'react'\n\nconst storageName = 'userData'\nexport interface IStorageTokenData {\n  token: string,\n  userId: string,\n}\n\nexport const useAuth = () => {\n  const [token, setToken] = useState('')\n  const [userId, setUserId] = useState('')\n  const [ready, setReady] = useState(false)\n\n  const login = useCallback((jwtToken: string, id: string) => {\n    setToken(jwtToken)\n    setUserId(id)\n\n    localStorage.setItem(storageName, JSON.stringify({userId: id, token: jwtToken}))\n  }, [])\n  const logout = useCallback(() => {\n    setToken('')\n    setUserId('')\n\n    localStorage.removeItem(storageName)\n  }, [])\n\n  useEffect(() => {\n    const locData = localStorage.getItem(storageName)\n\n    if (locData) {\n      const data: IStorageTokenData = JSON.parse(locData)\n      login(data.token, data.userId)\n    }\n\n    setReady(true)\n  }, [login])\n\n  return {\n    login, logout, token, userId, ready\n  }\n}","import {useState, useCallback} from 'react'\n\nexport interface IData {\n  message: string,\n  token?: string,\n  userId?: string,\n  link?: any,\n}\n\nexport const useHttp = () => {\n  const [loading, setLoading] = useState(false)\n  const [error, setError] = useState('')\n\n  \n\n  const request = useCallback(async (url: string, method = 'GET', body: any, headers: any) => {\n    setLoading(true)\n    try {\n      if (body) {\n        body = JSON.stringify(body)\n        headers['Content-TYpe'] = 'application/json'\n      }\n      const response = await fetch(url, { method, body, headers })\n      const data: IData = await response.json()\n\n      if (!response.ok) {\n        throw new Error(data.message || 'Что-то пошло не так')\n      }\n\n      setLoading(false)\n      return data\n\n    } catch (e) {\n      setLoading(false)\n      setError('Some random error')\n      throw e\n    }\n  }, [])\n\n  const clearErrors = useCallback(() => {\n    setError('')\n  }, [])\n\n  return {\n    loading,\n    request,\n    error,\n    clearErrors,\n  }\n}","import React, { useContext, useEffect, useState } from 'react';\nimport { AuthContext } from '../Context/AuthContext';\nimport { useHttp } from '../hooks/http.hook';\nimport { useMessage } from '../hooks/message.hook';\n\nconst AuthPage = () => {\n  const message = useMessage()\n  const auth = useContext(AuthContext)\n\n  const [form, setForm] = useState({\n    email: '',\n    password: '',\n  })\n\n  const { loading, request, error, clearErrors } = useHttp()\n\n  useEffect(() => {\n    console.log(error)\n    message(error)\n    clearErrors()\n  }, [error, message, clearErrors])\n\n\n  const registerHadler = async () => {\n    try {\n      const data = await request('/api/auth/register', 'POST', {...form}, {})\n      console.log('data', data)\n    } catch (e) {}\n  }\n\n  const loginHadler = async () => {\n    try {\n      const data = await request('/api/auth/login', 'POST', {...form}, {})\n      const { token, userId} = data\n\n      if (token && userId) {\n        auth.login(token, userId)\n      }\n    } catch (e) {}\n  }\n\n  const changeHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setForm((prev) => ({ ...prev, [e.target.name]: e.target.value }))\n  }\n\n  return (\n    <div className=\"row\">\n      <div className=\"col s6 offset-s3\">\n        <h1>Вход в систему</h1>\n        <div className=\"card white darken-1\">\n          <div className=\"card-content white-text\">\n            <span className=\"card-title\">Авторизация</span>\n            <div>\n              <div className=\"input-field\">\n                <input value={form.email} onChange={changeHandler} name=\"email\" placeholder={'Email'} id=\"email\" type=\"text\" className=\"validate\" />\n                <label htmlFor=\"email\">Введите Email</label>\n              </div>\n              <div className=\"input-field\">\n                <input value={form.password} onChange={changeHandler} name=\"password\" placeholder={'Password'} id=\"password\" type=\"password\" className=\"validate\" />\n                <label htmlFor=\"password\">Введите Password</label>\n              </div>\n            </div>\n          </div>\n          <div className=\"card-action\">\n            <button disabled={loading} onClick={loginHadler} className=\"btn yellow darken-4\" style={{marginRight: '10px'}}>Войти</button>\n            <button disabled={loading} onClick={registerHadler} className=\"btn blue\">Зарегистрироваться</button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AuthPage;\n","import { useCallback } from 'react'\n\ndeclare global {\n  interface Window { M: any; }\n}\n\nexport const useMessage = () => {\n  return useCallback((text: string) => {\n    if (window.M && text) {\n      window.M.toast({ html: text })\n    }\n  }, [])\n}\n","import React, { useContext, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { AuthContext } from '../Context/AuthContext';\nimport { useHttp } from '../hooks/http.hook';\n\nconst CreatePage = () => {\n  const history = useHistory()\n  const { token } = useContext(AuthContext)\n  const [link, setLink] = useState('')\n  const { request } = useHttp()\n\n  const pressHandler = async (e: React.KeyboardEvent<HTMLInputElement>) => {\n    if (e.key === 'Enter') {\n      try {\n        // Так как мы работаем с токеном нам нужно его отправить\n        const data = await request('/api/links/generate', 'POST', { from: link}, { Authorization: `Beaer ${token}` })\n        console.log(data)\n        history.push(`/detail/${data.link._id}`)\n      } catch (e) {\n        \n      }\n    }\n  }\n\n  return (\n    <div className=\"row\">\n      <div className=\"col s8 offset-s2\" style={{ paddingTop: '2rem' }}>\n        <div className=\"input-field\">\n          <input\n            value={link}\n            onChange={(e) => setLink(e.target.value)}\n            onKeyPress={pressHandler}\n            placeholder={'Вставьте ссылку'}\n            id=\"link\"\n            type=\"text\"\n            className=\"validate\"\n          />\n          <label htmlFor=\"link\">Ваша ссылка</label>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CreatePage;\n","import React from 'react'\n\nexport interface LinkCardProps {\n  link: any\n}\nconst LinkCard: React.FC<LinkCardProps> = ({ link }) => {\n  console.log(link)\n  return (\n    <div className=\"LinkCard\">\n      <h3>Ссылка</h3>\n      <p>Ваша ссылка: <a rel=\"noreferrer\" target=\"_blank\" href={link.to}>{link.to}</a></p>\n      <p>Откуда: <a target=\"_blank\" href={link.from} rel=\"noreferrer\">{link.from}</a></p>\n      <p>Клики по ссылке: <strong>{link.clicks}</strong></p>\n      <p>Дата создания: <strong>{new Date(link.date).toLocaleDateString()}</strong></p>\n    </div>\n  );\n};\n\nexport default LinkCard\n","import React, { useCallback, useContext, useEffect, useState } from 'react'\nimport { Link, useParams } from 'react-router-dom'\nimport LinkCard from '../components/LinkCard';\nimport Loader from '../components/Loader';\nimport { AuthContext } from '../Context/AuthContext';\nimport { IData, useHttp } from '../hooks/http.hook';\n\nconst DetailPage = () => {\n  const { token } = useContext(AuthContext)\n  const [link, setLink] = useState<IData | null>(null)\n  const { request, loading } = useHttp()\n  const params: {id: string} = useParams()\n  const { id } = params\n\n  const getLink = useCallback(async () => {\n    try {\n      const linkData = await request(`/api/links/${id}`, 'GET', null, {\n        Authorization: `Bearer ${token}`\n      })\n\n      setLink(linkData)\n\n    } catch (e) {\n      \n    }\n  }, [token, request, id])\n\n  useEffect(() => {\n    getLink()\n  }, [getLink])\n\n  if (loading) return <Loader />\n\n  return (\n    <div className=\"DetailPage\">\n      { !loading && link && <LinkCard link={link} />}\n    </div>\n  );\n};\n\nexport default DetailPage;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\ninterface ILinksListProps {\n  links: any\n}\nconst LinksList: React.FC<ILinksListProps> = ({ links }) => {\n  if (!links.length) return <p>Links not contain</p>\n  return (\n    <div className=\"container\">\n      <h1>Links</h1>\n      <table>\n        <thead>\n          <tr>\n              <th>To</th>\n              <th>From</th>\n              <th>Date</th>\n          </tr>\n        </thead>\n\n        <tbody>\n          {links.map((link: any) => (\n            <tr key={link._id}>\n              <td><a rel=\"noreferrer\" target=\"_blank\" href={link.to}>{link.to}</a></td>\n              <td><a rel=\"noreferrer\" target=\"_blank\" href={link.from}>{link.from}</a></td>\n              <td>{new Date(link.date).toLocaleDateString()}</td>\n              <td><Link to={`/detail/${link._id}`}>Открыть</Link></td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default LinksList;\n","import React, { useContext, useState, useCallback, useEffect } from 'react'\nimport LinksList from '../components/LinksList';\nimport Loader from '../components/Loader';\nimport { AuthContext } from '../Context/AuthContext';\nimport { IData, useHttp } from '../hooks/http.hook';\n\nconst LinksPage = () => {\n  const [links, setLinks] = useState<IData | null>(null)\n  const {loading, request} = useHttp()\n  const {token} = useContext(AuthContext)\n\n  const fetchLinks = useCallback(async () => {\n    try {\n      const fetched = await request('/api/links', 'GET', null, {\n        Authorization: `Barer ${token}`,\n      })\n\n      setLinks(fetched)\n    } catch (e) {\n      \n    }\n  }, [token, request])\n\n  useEffect(() => {\n    fetchLinks()\n  }, [fetchLinks])\n\n  if (loading) return <Loader />\n\n  return (\n    <div className=\"LinksPage\">\n      {!loading && links && <LinksList links={links} />}\n    </div>\n  );\n};\n\nexport default LinksPage;\n","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport Layout from './components/Layout';\nimport Loader from './components/Loader';\nimport { AuthContext } from './Context/AuthContext';\nimport { useAuth } from './hooks/useAuth';\nimport { useRoutes } from './routes';\n\nconst App = () => {\n  const { token, login, logout, userId, ready } = useAuth()\n  const isAuthenticated = !!token\n  const routes = useRoutes(isAuthenticated)\n\n  if (!ready) return <Loader />\n\n  return (\n    <AuthContext.Provider value={{ token, userId, isAuthenticated, login, logout }}>\n      <BrowserRouter>\n      { isAuthenticated && <Layout /> }\n        <div className=\"container\">\n          {routes}\n        </div>\n      </BrowserRouter>\n    </AuthContext.Provider>\n  );\n};\n\nexport default App;\n","import React from 'react'\nimport { Redirect, Route, Switch } from 'react-router-dom'\nimport AuthPage from '../pages/AuthPage'\nimport CreatePage from '../pages/CreatePage'\nimport DetailPage from '../pages/DetailPage'\nimport LinksPage from '../pages/LinksPage'\n\n// Функция вовзращающая определенные роуты\nexport const useRoutes = (isAuthenticated: boolean) => {\n  if (isAuthenticated) {\n    return (\n      <Switch>\n        <Route component={LinksPage} path={'/links'} exact />\n        <Route component={CreatePage} path={'/create'} exact />\n        <Route component={DetailPage} path={'/detail/:id'} />\n        <Redirect to={'/create'} />\n      </Switch>\n    )\n  } else {\n    return (\n      <Switch>\n        <Route component={AuthPage} path={'/'} exact />\n        <Redirect to={'/'} />\n      </Switch>\n    )\n  }\n}","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\nimport 'materialize-css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}